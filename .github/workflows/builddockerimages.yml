name: Build and Publish Multi-Arch Docker Image
permissions:
  contents: read
  pull-requests: read
  packages: write
on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  # workflow_run:
  #   workflows: ["Codacy Security Scan"]  # name of the Docker workflow
  #   types:
  #     - completed
env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build-multiarch:
    runs-on: ["self-hosted", "${{ matrix.arch }}"]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ matrix.arch }} image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ matrix.arch }}

  manifest:
    runs-on: self-hosted
    needs: [build-multiarch]
    steps:
      - uses: docker/setup-buildx-action@v3
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set date tag
        id: tag
        run: |
          DATETIME_TAG=$(date +'%Y.%m.%d_%H%M%S')
          echo "DATETIME_TAG=$DATETIME_TAG" >> $GITHUB_ENV
      - name: Create and push multi-arch manifests
        env:
          GHCR_IMAGE: ${{ github.repository }}
          SHORT_SHA: ${{ github.sha }}
        run: |
          SHORT_SHA=${SHORT_SHA::7}
          DATE_TAG=${date +'%Y.%m.%d_%H%M'}

          echo "Using SHORT_SHA: $SHORT_SHA"
          echo "Using DATE_TAG: $DATE_TAG"
          echo "Using GHCR_IMAGE: $GHCR_IMAGE"
          echo "Using DATETIME_TAG: ${{ env.DATETIME_TAG }}"

          docker pull ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-amd64
          docker pull ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-arm64
          
          echo "Sleep 10 secs, for the registry to parse the new images"
          sleep 10  # give GHCR a moment

          # latest tag manifest
          docker manifest create ghcr.io/$GHCR_IMAGE:latest \
            --amend ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-amd64 \
            --amend ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-arm64
          docker manifest push ghcr.io/$GHCR_IMAGE:latest

          # date tag manifest
          docker manifest create ghcr.io/$GHCR_IMAGE:${DATE_TAG} \
            --amend ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-amd64 \
            --amend ghcr.io/$GHCR_IMAGE:${SHORT_SHA}-arm64
          docker manifest push ghcr.io/$GHCR_IMAGE:${DATE_TAG}
