name: Build and Publish Multi-Arch Docker Image
permissions:
  contents: read
  pull-requests: read
on:
  workflow_run:
    workflows: ["Codacy Security Scan"]  # name of the Docker workflow
    types:
      - completed
  push:
    branches:
      - master


jobs:
  docker-build:
    runs-on: ["self-hosted", "${{ matrix.arch }}"]
    strategy:
      matrix:
        arch: [amd64, arm64]

    env:
      GIT_USER: ${{ secrets.GIT_USER }}
      IMAGE_NAME: ${{ github.repository_name }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tags
        id: tags
        run: |
          DATE_TAG=$(date +'%Y-%m-%d')
          SHORT_SHA=${GITHUB_SHA:0:7}
          echo "::set-output name=date::$DATE_TAG"
          echo "::set-output name=sha::$SHORT_SHA"
        shell: bash

      - name: Login to GHCR
        run: |
          printf "%s" "$GHCR_TOKEN" | docker login ghcr.io -u "$GIT_USER" --password-stdin
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GIT_USER: ${{ secrets.GIT_USER }}


      - name: Pull base image
        run: docker pull python:3.13-slim

      - name: Setup buildx builder
        run: |
          docker buildx inspect build_${{ github.repository_name }} >/dev/null 2>&1 || \
          docker buildx create --name build_${{ github.repository_name }} --use --bootstrap

      - name: Build and push architecture-specific image
        run: |
          docker buildx build \
            --builder build_$IMAGE_NAME \
            --platform linux/${{ matrix.arch }} \
            --cache-from=type=registry,ref=ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:cache \
            --cache-to=type=registry,ref=ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:cache,mode=max \
            -t ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${{ steps.tags.outputs.sha }}-${{ matrix.arch }} \
            -t ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${{ steps.tags.outputs.date }}-${{ matrix.arch }} \
            --push \
            docker-${{ github.repository_name }}

      - name: Cleanup builder
        run: docker buildx rm build_${{ github.repository_name }} || true

    outputs:
      date: ${{ steps.tags.outputs.date }}
      sha: ${{ steps.tags.outputs.sha }}

  docker-manifest:
    needs: docker-build
    runs-on: self-hosted
    env:
      GIT_USER: ${{ secrets.GIT_USER }}
      IMAGE_NAME: ${{ github.repository_name }}
      GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      DATE_TAG: ${{ needs.docker-build.outputs.date }}
      COMMIT_TAG: ${{ needs.docker-build.outputs.sha }}

    steps:
      - name: Login to GHCR
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GIT_USER }} --password-stdin

      - name: Create multi-arch manifest
        run: |
          # latest tag
          docker manifest create ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:latest \
            --amend ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${COMMIT_TAG}-amd64 \
            --amend ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${COMMIT_TAG}-arm64
          docker manifest push ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:latest 

          # date tag
          docker manifest create ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${{ steps.tags.outputs.date }} \
            --amend ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${COMMIT_TAG}-amd64 \
            --amend ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${COMMIT_TAG}-arm64
          docker manifest push ghcr.io/${{ secrets.GIT_USER }}/${{ github.repository_name }}:${{ steps.tags.outputs.date }} 
